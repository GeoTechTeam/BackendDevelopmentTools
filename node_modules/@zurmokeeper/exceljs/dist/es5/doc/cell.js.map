{"version":3,"file":"cell.js","names":["colCache","require","_","Enums","slideFormula","Note","Cell","constructor","row","column","address","Error","_row","_column","validateAddress","_address","_value","Value","create","Types","Null","style","_mergeStyle","_mergeCount","worksheet","workbook","destroy","numFmt","value","font","alignment","border","fill","protection","rowStyle","colStyle","number","col","$col$row","concat","letter","type","effectiveType","toCsvString","addMergeRef","releaseMergeRef","isMerged","Merge","merge","master","ignoreStyle","release","unmerge","isMergedTo","isHyperlink","Hyperlink","hyperlink","v","getType","note","_comment","removeNote","text","toString","html","escapeHtml","_upgradeToHyperlink","String","formula","result","formulaType","fullAddress","sheetName","name","names","definedNames","getNamesEx","removeAllNames","forEach","addEx","addName","removeName","removeEx","_dataValidations","dataValidations","dataValidation","find","add","model","comment","fromModel","cloneDeep","ValueType","NullValue","cell","NumberValue","Number","StringValue","replace","RichTextValue","richText","map","t","join","RichText","DateValue","Date","toISOString","HyperlinkValue","undefined","tooltip","MergeValue","_master","FormulaValue","Formula","shareType","ref","sharedFormula","_copyModel","copy","cp","validate","dependencies","ranges","match","cells","_getTranslatedFormula","FormulaType","Master","Shared","None","_translatedFormula","findCell","SharedStringValue","SharedString","BooleanValue","Boolean","ErrorValue","error","JSONValue","JSON","stringify","rawValue","sharedString","types","f","reduce","p","T","module","exports"],"sources":["../../../lib/doc/cell.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\r\nconst colCache = require('../utils/col-cache');\r\nconst _ = require('../utils/under-dash');\r\nconst Enums = require('./enums');\r\nconst {slideFormula} = require('../utils/shared-formula');\r\nconst Note = require('./note');\r\n// Cell requirements\r\n//  Operate inside a worksheet\r\n//  Store and retrieve a value with a range of types: text, number, date, hyperlink, reference, formula, etc.\r\n//  Manage/use and manipulate cell format either as local to cell or inherited from column or row.\r\n\r\nclass Cell {\r\n  constructor(row, column, address) {\r\n    if (!row || !column) {\r\n      throw new Error('A Cell needs a Row');\r\n    }\r\n\r\n    this._row = row;\r\n    this._column = column;\r\n\r\n    colCache.validateAddress(address);\r\n    this._address = address;\r\n\r\n    // TODO: lazy evaluation of this._value\r\n    this._value = Value.create(Cell.Types.Null, this);\r\n\r\n    this.style = this._mergeStyle(row.style, column.style, {});\r\n\r\n    this._mergeCount = 0;\r\n  }\r\n\r\n  get worksheet() {\r\n    return this._row.worksheet;\r\n  }\r\n\r\n  get workbook() {\r\n    return this._row.worksheet.workbook;\r\n  }\r\n\r\n  // help GC by removing cyclic (and other) references\r\n  destroy() {\r\n    delete this.style;\r\n    delete this._value;\r\n    delete this._row;\r\n    delete this._column;\r\n    delete this._address;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Styles stuff\r\n  get numFmt() {\r\n    return this.style.numFmt;\r\n  }\r\n\r\n  set numFmt(value) {\r\n    this.style.numFmt = value;\r\n  }\r\n\r\n  get font() {\r\n    return this.style.font;\r\n  }\r\n\r\n  set font(value) {\r\n    this.style.font = value;\r\n  }\r\n\r\n  get alignment() {\r\n    return this.style.alignment;\r\n  }\r\n\r\n  set alignment(value) {\r\n    this.style.alignment = value;\r\n  }\r\n\r\n  get border() {\r\n    return this.style.border;\r\n  }\r\n\r\n  set border(value) {\r\n    this.style.border = value;\r\n  }\r\n\r\n  get fill() {\r\n    return this.style.fill;\r\n  }\r\n\r\n  set fill(value) {\r\n    this.style.fill = value;\r\n  }\r\n\r\n  get protection() {\r\n    return this.style.protection;\r\n  }\r\n\r\n  set protection(value) {\r\n    this.style.protection = value;\r\n  }\r\n\r\n  _mergeStyle(rowStyle, colStyle, style) {\r\n    const numFmt = (rowStyle && rowStyle.numFmt) || (colStyle && colStyle.numFmt);\r\n    if (numFmt) style.numFmt = numFmt;\r\n\r\n    const font = (rowStyle && rowStyle.font) || (colStyle && colStyle.font);\r\n    if (font) style.font = font;\r\n\r\n    const alignment = (rowStyle && rowStyle.alignment) || (colStyle && colStyle.alignment);\r\n    if (alignment) style.alignment = alignment;\r\n\r\n    const border = (rowStyle && rowStyle.border) || (colStyle && colStyle.border);\r\n    if (border) style.border = border;\r\n\r\n    const fill = (rowStyle && rowStyle.fill) || (colStyle && colStyle.fill);\r\n    if (fill) style.fill = fill;\r\n\r\n    const protection = (rowStyle && rowStyle.protection) || (colStyle && colStyle.protection);\r\n    if (protection) style.protection = protection;\r\n\r\n    return style;\r\n  }\r\n\r\n  // =========================================================================\r\n  // return the address for this cell\r\n  get address() {\r\n    return this._address;\r\n  }\r\n\r\n  get row() {\r\n    return this._row.number;\r\n  }\r\n\r\n  get col() {\r\n    return this._column.number;\r\n  }\r\n\r\n  get $col$row() {\r\n    return `$${this._column.letter}$${this.row}`;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Value stuff\r\n\r\n  get type() {\r\n    return this._value.type;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return this._value.effectiveType;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this._value.toCsvString();\r\n  }\r\n\r\n  // =========================================================================\r\n  // Merge stuff\r\n\r\n  addMergeRef() {\r\n    this._mergeCount++;\r\n  }\r\n\r\n  releaseMergeRef() {\r\n    this._mergeCount--;\r\n  }\r\n\r\n  get isMerged() {\r\n    return this._mergeCount > 0 || this.type === Cell.Types.Merge;\r\n  }\r\n\r\n  merge(master, ignoreStyle) {\r\n    this._value.release();\r\n    this._value = Value.create(Cell.Types.Merge, this, master);\r\n    if (!ignoreStyle) {\r\n      this.style = master.style;\r\n    }\r\n  }\r\n\r\n  unmerge() {\r\n    if (this.type === Cell.Types.Merge) {\r\n      this._value.release();\r\n      this._value = Value.create(Cell.Types.Null, this);\r\n      this.style = this._mergeStyle(this._row.style, this._column.style, {});\r\n    }\r\n  }\r\n\r\n  isMergedTo(master) {\r\n    if (this._value.type !== Cell.Types.Merge) return false;\r\n    return this._value.isMergedTo(master);\r\n  }\r\n\r\n  get master() {\r\n    if (this.type === Cell.Types.Merge) {\r\n      return this._value.master;\r\n    }\r\n    return this; // an unmerged cell is its own master\r\n  }\r\n\r\n  get isHyperlink() {\r\n    return this._value.type === Cell.Types.Hyperlink;\r\n  }\r\n\r\n  get hyperlink() {\r\n    return this._value.hyperlink;\r\n  }\r\n\r\n  // return the value\r\n  get value() {\r\n    return this._value.value;\r\n  }\r\n\r\n  // set the value - can be number, string or raw\r\n  set value(v) {\r\n    // special case - merge cells set their master's value\r\n    if (this.type === Cell.Types.Merge) {\r\n      this._value.master.value = v;\r\n      return;\r\n    }\r\n\r\n    this._value.release();\r\n\r\n    // assign value\r\n    this._value = Value.create(Value.getType(v), this, v);\r\n  }\r\n\r\n  get note() {\r\n    return this._comment && this._comment.note;\r\n  }\r\n\r\n  set note(note) {\r\n    this._comment = new Note(note);\r\n  }\r\n\r\n  removeNote() {\r\n    delete this._comment;\r\n  }\r\n\r\n  get text() {\r\n    return this._value.toString();\r\n  }\r\n\r\n  get html() {\r\n    return _.escapeHtml(this.text);\r\n  }\r\n\r\n  toString() {\r\n    return this.text;\r\n  }\r\n\r\n  _upgradeToHyperlink(hyperlink) {\r\n    // if this cell is a string, turn it into a Hyperlink\r\n    if (this.type === Cell.Types.String) {\r\n      this._value = Value.create(Cell.Types.Hyperlink, this, {\r\n        text: this._value.value,\r\n        hyperlink,\r\n      });\r\n    }\r\n  }\r\n\r\n  // =========================================================================\r\n  // Formula stuff\r\n  get formula() {\r\n    return this._value.formula;\r\n  }\r\n\r\n  get result() {\r\n    return this._value.result;\r\n  }\r\n\r\n  get formulaType() {\r\n    return this._value.formulaType;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Name stuff\r\n  get fullAddress() {\r\n    const {worksheet} = this._row;\r\n    return {\r\n      sheetName: worksheet.name,\r\n      address: this.address,\r\n      row: this.row,\r\n      col: this.col,\r\n    };\r\n  }\r\n\r\n  get name() {\r\n    return this.names[0];\r\n  }\r\n\r\n  set name(value) {\r\n    this.names = [value];\r\n  }\r\n\r\n  get names() {\r\n    return this.workbook.definedNames.getNamesEx(this.fullAddress);\r\n  }\r\n\r\n  set names(value) {\r\n    const {definedNames} = this.workbook;\r\n    definedNames.removeAllNames(this.fullAddress);\r\n    value.forEach(name => {\r\n      definedNames.addEx(this.fullAddress, name);\r\n    });\r\n  }\r\n\r\n  addName(name) {\r\n    this.workbook.definedNames.addEx(this.fullAddress, name);\r\n  }\r\n\r\n  removeName(name) {\r\n    this.workbook.definedNames.removeEx(this.fullAddress, name);\r\n  }\r\n\r\n  removeAllNames() {\r\n    this.workbook.definedNames.removeAllNames(this.fullAddress);\r\n  }\r\n\r\n  // =========================================================================\r\n  // Data Validation stuff\r\n  get _dataValidations() {\r\n    return this.worksheet.dataValidations;\r\n  }\r\n\r\n  get dataValidation() {\r\n    return this._dataValidations.find(this.address);\r\n  }\r\n\r\n  set dataValidation(value) {\r\n    this._dataValidations.add(this.address, value);\r\n  }\r\n\r\n  // =========================================================================\r\n  // Model stuff\r\n\r\n  get model() {\r\n    const {model} = this._value;\r\n    model.style = this.style;\r\n    if (this._comment) {\r\n      model.comment = this._comment.model;\r\n    } else {\r\n      delete model.comment;\r\n    }\r\n    return model;\r\n  }\r\n\r\n  set model(value) {\r\n    this._value.release();\r\n    this._value = Value.create(value.type, this);\r\n    this._value.model = value;\r\n\r\n    if (value.comment) {\r\n      switch (value.comment.type) {\r\n        case 'note':\r\n          this._comment = Note.fromModel(value.comment);\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (value.style) {\r\n      this.style = _.cloneDeep(value.style);\r\n    } else {\r\n      this.style = {};\r\n    }\r\n  }\r\n}\r\nCell.Types = Enums.ValueType;\r\n\r\n// =============================================================================\r\n// Internal Value Types\r\n\r\nclass NullValue {\r\n  constructor(cell) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Null,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return null;\r\n  }\r\n\r\n  set value(value) {\r\n    // nothing to do\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Null;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.Null;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return '';\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return '';\r\n  }\r\n}\r\n\r\nclass NumberValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Number,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Number;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.Number;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.model.value.toString();\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value.toString();\r\n  }\r\n}\r\n\r\nclass StringValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.String,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.String;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.String;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return `\"${this.model.value.replace(/\"/g, '\"\"')}\"`;\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value;\r\n  }\r\n}\r\n\r\nclass RichTextValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.String,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  toString() {\r\n    return this.model.value.richText.map(t => t.text).join('');\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.RichText;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.RichText;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return `\"${this.text.replace(/\"/g, '\"\"')}\"`;\r\n  }\r\n\r\n  release() {}\r\n}\r\n\r\nclass DateValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Date,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Date;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.Date;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.model.value.toISOString();\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value.toString();\r\n  }\r\n}\r\n\r\nclass HyperlinkValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Hyperlink,\r\n      text: value ? value.text : undefined,\r\n      hyperlink: value ? value.hyperlink : undefined,\r\n    };\r\n    if (value && value.tooltip) {\r\n      this.model.tooltip = value.tooltip;\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    const v = {\r\n      text: this.model.text,\r\n      hyperlink: this.model.hyperlink,\r\n    };\r\n    if (this.model.tooltip) {\r\n      v.tooltip = this.model.tooltip;\r\n    }\r\n    return v;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model = {\r\n      text: value.text,\r\n      hyperlink: value.hyperlink,\r\n    };\r\n    if (value.tooltip) {\r\n      this.model.tooltip = value.tooltip;\r\n    }\r\n  }\r\n\r\n  get text() {\r\n    return this.model.text;\r\n  }\r\n\r\n  set text(value) {\r\n    this.model.text = value;\r\n  }\r\n\r\n  /*\r\n  get tooltip() {\r\n    return this.model.tooltip;\r\n  }\r\n\r\n  set tooltip(value) {\r\n    this.model.tooltip = value;\r\n  } */\r\n\r\n  get hyperlink() {\r\n    return this.model.hyperlink;\r\n  }\r\n\r\n  set hyperlink(value) {\r\n    this.model.hyperlink = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Hyperlink;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.Hyperlink;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.model.hyperlink;\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.text;\r\n  }\r\n}\r\n\r\nclass MergeValue {\r\n  constructor(cell, master) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Merge,\r\n      master: master ? master.address : undefined,\r\n    };\r\n    this._master = master;\r\n    if (master) {\r\n      master.addMergeRef();\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this._master.value;\r\n  }\r\n\r\n  set value(value) {\r\n    if (value instanceof Cell) {\r\n      if (this._master) {\r\n        this._master.releaseMergeRef();\r\n      }\r\n      value.addMergeRef();\r\n      this._master = value;\r\n    } else {\r\n      this._master.value = value;\r\n    }\r\n  }\r\n\r\n  isMergedTo(master) {\r\n    return master === this._master;\r\n  }\r\n\r\n  get master() {\r\n    return this._master;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Merge;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return this._master.effectiveType;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return '';\r\n  }\r\n\r\n  release() {\r\n    this._master.releaseMergeRef();\r\n  }\r\n\r\n  toString() {\r\n    return this.value.toString();\r\n  }\r\n}\r\n\r\nclass FormulaValue {\r\n  constructor(cell, value) {\r\n    this.cell = cell;\r\n\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Formula,\r\n      shareType: value ? value.shareType : undefined,\r\n      ref: value ? value.ref : undefined,\r\n      formula: value ? value.formula : undefined,\r\n      sharedFormula: value ? value.sharedFormula : undefined,\r\n      result: value ? value.result : undefined,\r\n    };\r\n  }\r\n\r\n  _copyModel(model) {\r\n    const copy = {};\r\n    const cp = name => {\r\n      const value = model[name];\r\n      if (value) {\r\n        copy[name] = value;\r\n      }\r\n    };\r\n    cp('formula');\r\n    cp('result');\r\n    cp('ref');\r\n    cp('shareType');\r\n    cp('sharedFormula');\r\n    return copy;\r\n  }\r\n\r\n  get value() {\r\n    return this._copyModel(this.model);\r\n  }\r\n\r\n  set value(value) {\r\n    this.model = this._copyModel(value);\r\n  }\r\n\r\n  validate(value) {\r\n    switch (Value.getType(value)) {\r\n      case Cell.Types.Null:\r\n      case Cell.Types.String:\r\n      case Cell.Types.Number:\r\n      case Cell.Types.Date:\r\n        break;\r\n      case Cell.Types.Hyperlink:\r\n      case Cell.Types.Formula:\r\n      default:\r\n        throw new Error('Cannot process that type of result value');\r\n    }\r\n  }\r\n\r\n  get dependencies() {\r\n    // find all the ranges and cells mentioned in the formula\r\n    const ranges = this.formula.match(/([a-zA-Z0-9]+!)?[A-Z]{1,3}\\d{1,4}:[A-Z]{1,3}\\d{1,4}/g);\r\n    const cells = this.formula\r\n      .replace(/([a-zA-Z0-9]+!)?[A-Z]{1,3}\\d{1,4}:[A-Z]{1,3}\\d{1,4}/g, '')\r\n      .match(/([a-zA-Z0-9]+!)?[A-Z]{1,3}\\d{1,4}/g);\r\n    return {\r\n      ranges,\r\n      cells,\r\n    };\r\n  }\r\n\r\n  get formula() {\r\n    return this.model.formula || this._getTranslatedFormula();\r\n  }\r\n\r\n  set formula(value) {\r\n    this.model.formula = value;\r\n  }\r\n\r\n  get formulaType() {\r\n    if (this.model.formula) {\r\n      return Enums.FormulaType.Master;\r\n    }\r\n    if (this.model.sharedFormula) {\r\n      return Enums.FormulaType.Shared;\r\n    }\r\n    return Enums.FormulaType.None;\r\n  }\r\n\r\n  get result() {\r\n    return this.model.result;\r\n  }\r\n\r\n  set result(value) {\r\n    this.model.result = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Formula;\r\n  }\r\n\r\n  get effectiveType() {\r\n    const v = this.model.result;\r\n    if (v === null || v === undefined) {\r\n      return Enums.ValueType.Null;\r\n    }\r\n    if (v instanceof String || typeof v === 'string') {\r\n      return Enums.ValueType.String;\r\n    }\r\n    if (typeof v === 'number') {\r\n      return Enums.ValueType.Number;\r\n    }\r\n    if (v instanceof Date) {\r\n      return Enums.ValueType.Date;\r\n    }\r\n    if (v.text && v.hyperlink) {\r\n      return Enums.ValueType.Hyperlink;\r\n    }\r\n    if (v.formula) {\r\n      return Enums.ValueType.Formula;\r\n    }\r\n\r\n    return Enums.ValueType.Null;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  _getTranslatedFormula() {\r\n    if (!this._translatedFormula && this.model.sharedFormula) {\r\n      const {worksheet} = this.cell;\r\n      const master = worksheet.findCell(this.model.sharedFormula);\r\n      this._translatedFormula = master && slideFormula(master.formula, master.address, this.model.address);\r\n    }\r\n    return this._translatedFormula;\r\n  }\r\n\r\n  toCsvString() {\r\n    return `${this.model.result || ''}`;\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.result ? this.model.result.toString() : '';\r\n  }\r\n}\r\n\r\nclass SharedStringValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.SharedString,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.SharedString;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.SharedString;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.model.value.toString();\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value.toString();\r\n  }\r\n}\r\n\r\nclass BooleanValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Boolean,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Boolean;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.Boolean;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.model.value ? 1 : 0;\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value.toString();\r\n  }\r\n}\r\n\r\nclass ErrorValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.Error,\r\n      value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.value;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.value = value;\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.Error;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.Error;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.toString();\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value.error.toString();\r\n  }\r\n}\r\n\r\nclass JSONValue {\r\n  constructor(cell, value) {\r\n    this.model = {\r\n      address: cell.address,\r\n      type: Cell.Types.String,\r\n      value: JSON.stringify(value),\r\n      rawValue: value,\r\n    };\r\n  }\r\n\r\n  get value() {\r\n    return this.model.rawValue;\r\n  }\r\n\r\n  set value(value) {\r\n    this.model.rawValue = value;\r\n    this.model.value = JSON.stringify(value);\r\n  }\r\n\r\n  get type() {\r\n    return Cell.Types.String;\r\n  }\r\n\r\n  get effectiveType() {\r\n    return Cell.Types.String;\r\n  }\r\n\r\n  get address() {\r\n    return this.model.address;\r\n  }\r\n\r\n  set address(value) {\r\n    this.model.address = value;\r\n  }\r\n\r\n  toCsvString() {\r\n    return this.model.value;\r\n  }\r\n\r\n  release() {}\r\n\r\n  toString() {\r\n    return this.model.value;\r\n  }\r\n}\r\n\r\n// Value is a place to hold common static Value type functions\r\nconst Value = {\r\n  getType(value) {\r\n    if (value === null || value === undefined) {\r\n      return Cell.Types.Null;\r\n    }\r\n    if (value instanceof String || typeof value === 'string') {\r\n      return Cell.Types.String;\r\n    }\r\n    if (typeof value === 'number') {\r\n      return Cell.Types.Number;\r\n    }\r\n    if (typeof value === 'boolean') {\r\n      return Cell.Types.Boolean;\r\n    }\r\n    if (value instanceof Date) {\r\n      return Cell.Types.Date;\r\n    }\r\n    if (value.text && value.hyperlink) {\r\n      return Cell.Types.Hyperlink;\r\n    }\r\n    if (value.formula || value.sharedFormula) {\r\n      return Cell.Types.Formula;\r\n    }\r\n    if (value.richText) {\r\n      return Cell.Types.RichText;\r\n    }\r\n    if (value.sharedString) {\r\n      return Cell.Types.SharedString;\r\n    }\r\n    if (value.error) {\r\n      return Cell.Types.Error;\r\n    }\r\n    return Cell.Types.JSON;\r\n  },\r\n\r\n  // map valueType to constructor\r\n  types: [\r\n    {t: Cell.Types.Null, f: NullValue},\r\n    {t: Cell.Types.Number, f: NumberValue},\r\n    {t: Cell.Types.String, f: StringValue},\r\n    {t: Cell.Types.Date, f: DateValue},\r\n    {t: Cell.Types.Hyperlink, f: HyperlinkValue},\r\n    {t: Cell.Types.Formula, f: FormulaValue},\r\n    {t: Cell.Types.Merge, f: MergeValue},\r\n    {t: Cell.Types.JSON, f: JSONValue},\r\n    {t: Cell.Types.SharedString, f: SharedStringValue},\r\n    {t: Cell.Types.RichText, f: RichTextValue},\r\n    {t: Cell.Types.Boolean, f: BooleanValue},\r\n    {t: Cell.Types.Error, f: ErrorValue},\r\n  ].reduce((p, t) => {\r\n    p[t.t] = t.f;\r\n    return p;\r\n  }, []),\r\n\r\n  create(type, cell, value) {\r\n    const T = this.types[type];\r\n    if (!T) {\r\n      throw new Error(`Could not create Value of type ${type}`);\r\n    }\r\n    return new T(cell, value);\r\n  },\r\n};\r\n\r\nmodule.exports = Cell;\r\n"],"mappings":"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"}