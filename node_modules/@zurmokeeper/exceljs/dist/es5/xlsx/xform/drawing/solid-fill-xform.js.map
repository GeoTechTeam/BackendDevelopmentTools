{"version":3,"file":"solid-fill-xform.js","names":["BaseXform","require","SchemeClrXform","SrgbClrXform","SolidFillXform","constructor","model","map","tag","render","xmlStream","openNode","color","closeNode","parseOpen","node","parser","name","reset","parseClose","undefined","Object","assign","keys","length","module","exports"],"sources":["../../../../../lib/xlsx/xform/drawing/solid-fill-xform.js"],"sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\nconst SchemeClrXform = require('./scheme-clr-xform');\r\nconst SrgbClrXform = require('./srgb-clr-xform');\r\n\r\nclass SolidFillXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n    this.model = null;\r\n    this.map = {\r\n      'a:srgbClr': new SrgbClrXform(),\r\n      'a:schemeClr': new SchemeClrXform(),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'a:solidFill';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag);\r\n    if (model.color) {\r\n      this.map['a:srgbClr'].render(xmlStream, model);\r\n    } else {\r\n      this.map['a:schemeClr'].render(xmlStream, model);\r\n    }\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    switch (name) {\r\n      case this.tag:\r\n        this.model = Object.assign({}, this.map['a:schemeClr'].model, this.map['a:srgbClr'].model);\r\n        if (!Object.keys(this.model).length) {\r\n          this.model = null;\r\n        }\r\n        return false;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = SolidFillXform;\r\n"],"mappings":";;AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE1C,MAAMC,cAAc,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AACpD,MAAME,YAAY,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAEhD,MAAMG,cAAc,SAASJ,SAAS,CAAC;EACrCK,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,GAAG,GAAG;MACT,WAAW,EAAE,IAAIJ,YAAY,CAAC,CAAC;MAC/B,aAAa,EAAE,IAAID,cAAc,CAAC;IACpC,CAAC;EACH;EAEA,IAAIM,GAAGA,CAAA,EAAG;IACR,OAAO,aAAa;EACtB;EAEAC,MAAMA,CAACC,SAAS,EAAEJ,KAAK,EAAE;IACvBI,SAAS,CAACC,QAAQ,CAAC,IAAI,CAACH,GAAG,CAAC;IAC5B,IAAIF,KAAK,CAACM,KAAK,EAAE;MACf,IAAI,CAACL,GAAG,CAAC,WAAW,CAAC,CAACE,MAAM,CAACC,SAAS,EAAEJ,KAAK,CAAC;IAChD,CAAC,MAAM;MACL,IAAI,CAACC,GAAG,CAAC,aAAa,CAAC,CAACE,MAAM,CAACC,SAAS,EAAEJ,KAAK,CAAC;IAClD;IACAI,SAAS,CAACG,SAAS,CAAC,CAAC;EACvB;EAEAC,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,IAAI,CAACC,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;MAC3B,OAAO,IAAI;IACb;IACA,QAAQA,IAAI,CAACE,IAAI;MACf,KAAK,IAAI,CAACT,GAAG;QACX,IAAI,CAACU,KAAK,CAAC,CAAC;QACZ;MACF;QACE,IAAI,CAACF,MAAM,GAAG,IAAI,CAACT,GAAG,CAACQ,IAAI,CAACE,IAAI,CAAC;QACjC,IAAI,IAAI,CAACD,MAAM,EAAE;UACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;QAC7B;QACA;IACJ;IACA,OAAO,IAAI;EACb;EAEAI,UAAUA,CAACF,IAAI,EAAE;IACf,IAAI,IAAI,CAACD,MAAM,EAAE;MACf,IAAI,CAAC,IAAI,CAACA,MAAM,CAACG,UAAU,CAACF,IAAI,CAAC,EAAE;QACjC,IAAI,CAACD,MAAM,GAAGI,SAAS;MACzB;MACA,OAAO,IAAI;IACb;IAEA,QAAQH,IAAI;MACV,KAAK,IAAI,CAACT,GAAG;QACX,IAAI,CAACF,KAAK,GAAGe,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACf,GAAG,CAAC,aAAa,CAAC,CAACD,KAAK,EAAE,IAAI,CAACC,GAAG,CAAC,WAAW,CAAC,CAACD,KAAK,CAAC;QAC1F,IAAI,CAACe,MAAM,CAACE,IAAI,CAAC,IAAI,CAACjB,KAAK,CAAC,CAACkB,MAAM,EAAE;UACnC,IAAI,CAAClB,KAAK,GAAG,IAAI;QACnB;QACA,OAAO,KAAK;MACd;QACE,OAAO,IAAI;IACf;EACF;AACF;AAEAmB,MAAM,CAACC,OAAO,GAAGtB,cAAc"}